name: invoiceninja
reset_timeout: 60000
environment_ready_timeout: 300000
datasets:
- name: base
  description: Base dataset with admin credentials
  variables:
    username: admin@example.com
    password: changeme!
    secret: plato-invoiceninja-api-secret-2024
    wrong_password: wrongpassword
  flows:
  - login
  - incorrect_login
flows:
- name: login
  description: Complete login flow for Invoice Ninja with verification
  steps:
  - action: screenshot
    description: Screenshot before login (initial page)
    filename: 01_before_login.png
  - action: wait
    description: Wait for page to fully load
    duration: 5000
  - action: fill
    description: Fill email field
    selector: 'input[name=''email''], input[type=''email''], #email'
    value: $username
  - action: fill
    description: Fill password field
    selector: 'input[name=''password''], input[type=''password''], #password'
    value: $password
  - action: fill
    description: Fill secret field
    selector: 'input[name=''secret''], input[name=''api_secret''], #secret, #api_secret'
    value: $secret
  - action: screenshot
    description: Screenshot after credentials entered, before submission
    filename: 02_credentials_entered.png
  - action: click
    description: Click login button
    selector: button[type='submit'], input[type='submit'], .btn-primary, .login-button, button.btn
  - action: wait
    description: Wait for login to process
    duration: 3000
  - action: screenshot
    description: Screenshot after login attempt
    filename: 03_after_login.png
  - action: wait
    description: Wait after clicking login
    duration: 5000
  - action: wait
    description: Wait for page to fully load after login
    duration: 3000
  - action: verify_no_errors
    description: Verify no login errors are displayed
    error_selectors:
    - .alert-danger
    - .alert-error
    - .error-message
    - .text-danger
    - .invalid-feedback
    - .login-error
    - .auth-error
    - .error
    - .alert
  - action: verify
    description: Verify successful login by checking for Invoice Ninja dashboard elements
    selector: body:not(:has(.login-form)), .container, .content, .wrapper, main, .app, [class*="dashboard"], [class*="main"], [class*="content"], .btn, .menu, .nav, header, .header
    type: element_exists
- name: incorrect_login
  description: Verify login fails with incorrect password
  steps:
  - action: screenshot
    description: Screenshot before incorrect login attempt
    filename: 01_before_incorrect_login.png
  - action: wait
    description: Wait for page to fully load
    duration: 3000
  - action: wait_for_selector
    description: Wait for username/email field
    selector: 'input[name=''email''], input[type=''email''], #email'
    timeout: 15000
  - action: fill
    description: Fill username/email field with valid username
    selector: 'input[name=''email''], input[type=''email''], #email'
    value: $username
  - action: wait_for_selector
    description: Wait for password field
    selector: 'input[name=''password''], input[type=''password''], #password'
    timeout: 5000
  - action: fill
    description: Fill password field with incorrect password
    selector: 'input[name=''password''], input[type=''password''], #password'
    value: $wrong_password
  - action: fill
    description: Fill secret field
    selector: 'input[name="secret"], input[name="api_secret"], #secret, #api_secret'
    value: $secret
  - action: screenshot
    description: Screenshot after entering incorrect credentials
    filename: 02_incorrect_credentials_entered.png
  - action: click
    description: Click login submit button
    selector: button[type="submit"], input[type="submit"], .btn-primary, .login-button, button.btn
  - action: wait
    description: Wait for login attempt to process
    duration: 3000
  - action: screenshot
    description: Screenshot after incorrect login attempt
    filename: 03_after_incorrect_login.png
  - action: wait
    description: Wait for page to update after login attempt
    duration: 5000
  - action: verify
    description: Verify still on login page by checking for email field
    selector: 'input[name="email"], input[type="email"], #email'
    type: element_exists
