// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: proto/plato.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Compute resource configuration for a simulator
type SimConfigCompute struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Cpus               int32                  `protobuf:"varint,1,opt,name=cpus,proto3" json:"cpus,omitempty"`
	Memory             int32                  `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk               int32                  `protobuf:"varint,3,opt,name=disk,proto3" json:"disk,omitempty"`
	AppPort            int32                  `protobuf:"varint,4,opt,name=app_port,json=appPort,proto3" json:"app_port,omitempty"`
	PlatoMessagingPort int32                  `protobuf:"varint,5,opt,name=plato_messaging_port,json=platoMessagingPort,proto3" json:"plato_messaging_port,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SimConfigCompute) Reset() {
	*x = SimConfigCompute{}
	mi := &file_proto_plato_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimConfigCompute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimConfigCompute) ProtoMessage() {}

func (x *SimConfigCompute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimConfigCompute.ProtoReflect.Descriptor instead.
func (*SimConfigCompute) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{0}
}

func (x *SimConfigCompute) GetCpus() int32 {
	if x != nil {
		return x.Cpus
	}
	return 0
}

func (x *SimConfigCompute) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *SimConfigCompute) GetDisk() int32 {
	if x != nil {
		return x.Disk
	}
	return 0
}

func (x *SimConfigCompute) GetAppPort() int32 {
	if x != nil {
		return x.AppPort
	}
	return 0
}

func (x *SimConfigCompute) GetPlatoMessagingPort() int32 {
	if x != nil {
		return x.PlatoMessagingPort
	}
	return 0
}

// Metadata configuration for a simulator
type SimConfigMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Favicon       string                 `protobuf:"bytes,1,opt,name=favicon,proto3" json:"favicon,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SourceCodeUrl string                 `protobuf:"bytes,4,opt,name=source_code_url,json=sourceCodeUrl,proto3" json:"source_code_url,omitempty"`
	StartUrl      string                 `protobuf:"bytes,5,opt,name=start_url,json=startUrl,proto3" json:"start_url,omitempty"`
	License       string                 `protobuf:"bytes,6,opt,name=license,proto3" json:"license,omitempty"`
	Variables     []*Variable            `protobuf:"bytes,7,rep,name=variables,proto3" json:"variables,omitempty"`
	FlowsPath     *string                `protobuf:"bytes,8,opt,name=flows_path,json=flowsPath,proto3,oneof" json:"flows_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimConfigMetadata) Reset() {
	*x = SimConfigMetadata{}
	mi := &file_proto_plato_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimConfigMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimConfigMetadata) ProtoMessage() {}

func (x *SimConfigMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimConfigMetadata.ProtoReflect.Descriptor instead.
func (*SimConfigMetadata) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{1}
}

func (x *SimConfigMetadata) GetFavicon() string {
	if x != nil {
		return x.Favicon
	}
	return ""
}

func (x *SimConfigMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SimConfigMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SimConfigMetadata) GetSourceCodeUrl() string {
	if x != nil {
		return x.SourceCodeUrl
	}
	return ""
}

func (x *SimConfigMetadata) GetStartUrl() string {
	if x != nil {
		return x.StartUrl
	}
	return ""
}

func (x *SimConfigMetadata) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *SimConfigMetadata) GetVariables() []*Variable {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *SimConfigMetadata) GetFlowsPath() string {
	if x != nil && x.FlowsPath != nil {
		return *x.FlowsPath
	}
	return ""
}

// Environment variable
type Variable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Variable) Reset() {
	*x = Variable{}
	mi := &file_proto_plato_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{2}
}

func (x *Variable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Variable) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Service configuration (docker-compose or docker)
type SimConfigService struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Type                      string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	File                      *string                `protobuf:"bytes,2,opt,name=file,proto3,oneof" json:"file,omitempty"`
	RequiredHealthyContainers []string               `protobuf:"bytes,3,rep,name=required_healthy_containers,json=requiredHealthyContainers,proto3" json:"required_healthy_containers,omitempty"`
	HealthyWaitTimeout        *int32                 `protobuf:"varint,4,opt,name=healthy_wait_timeout,json=healthyWaitTimeout,proto3,oneof" json:"healthy_wait_timeout,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *SimConfigService) Reset() {
	*x = SimConfigService{}
	mi := &file_proto_plato_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimConfigService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimConfigService) ProtoMessage() {}

func (x *SimConfigService) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimConfigService.ProtoReflect.Descriptor instead.
func (*SimConfigService) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{3}
}

func (x *SimConfigService) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SimConfigService) GetFile() string {
	if x != nil && x.File != nil {
		return *x.File
	}
	return ""
}

func (x *SimConfigService) GetRequiredHealthyContainers() []string {
	if x != nil {
		return x.RequiredHealthyContainers
	}
	return nil
}

func (x *SimConfigService) GetHealthyWaitTimeout() int32 {
	if x != nil && x.HealthyWaitTimeout != nil {
		return *x.HealthyWaitTimeout
	}
	return 0
}

// Listener configuration - can be DB or File type
type SimConfigListener struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// DB listener fields
	DbType     *string `protobuf:"bytes,2,opt,name=db_type,json=dbType,proto3,oneof" json:"db_type,omitempty"`
	DbHost     *string `protobuf:"bytes,3,opt,name=db_host,json=dbHost,proto3,oneof" json:"db_host,omitempty"`
	DbPort     *int32  `protobuf:"varint,4,opt,name=db_port,json=dbPort,proto3,oneof" json:"db_port,omitempty"`
	DbUser     *string `protobuf:"bytes,5,opt,name=db_user,json=dbUser,proto3,oneof" json:"db_user,omitempty"`
	DbPassword *string `protobuf:"bytes,6,opt,name=db_password,json=dbPassword,proto3,oneof" json:"db_password,omitempty"`
	DbDatabase *string `protobuf:"bytes,7,opt,name=db_database,json=dbDatabase,proto3,oneof" json:"db_database,omitempty"`
	// File listener fields
	TargetDir      *string  `protobuf:"bytes,10,opt,name=target_dir,json=targetDir,proto3,oneof" json:"target_dir,omitempty"`
	WatchEnabled   *bool    `protobuf:"varint,11,opt,name=watch_enabled,json=watchEnabled,proto3,oneof" json:"watch_enabled,omitempty"`
	WatchPatterns  []string `protobuf:"bytes,12,rep,name=watch_patterns,json=watchPatterns,proto3" json:"watch_patterns,omitempty"`
	IgnorePatterns []string `protobuf:"bytes,13,rep,name=ignore_patterns,json=ignorePatterns,proto3" json:"ignore_patterns,omitempty"`
	SeedDataPath   *string  `protobuf:"bytes,14,opt,name=seed_data_path,json=seedDataPath,proto3,oneof" json:"seed_data_path,omitempty"`
	// Common fields
	SeedDataPaths []string `protobuf:"bytes,20,rep,name=seed_data_paths,json=seedDataPaths,proto3" json:"seed_data_paths,omitempty"`
	Volumes       []string `protobuf:"bytes,21,rep,name=volumes,proto3" json:"volumes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimConfigListener) Reset() {
	*x = SimConfigListener{}
	mi := &file_proto_plato_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimConfigListener) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimConfigListener) ProtoMessage() {}

func (x *SimConfigListener) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimConfigListener.ProtoReflect.Descriptor instead.
func (*SimConfigListener) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{4}
}

func (x *SimConfigListener) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SimConfigListener) GetDbType() string {
	if x != nil && x.DbType != nil {
		return *x.DbType
	}
	return ""
}

func (x *SimConfigListener) GetDbHost() string {
	if x != nil && x.DbHost != nil {
		return *x.DbHost
	}
	return ""
}

func (x *SimConfigListener) GetDbPort() int32 {
	if x != nil && x.DbPort != nil {
		return *x.DbPort
	}
	return 0
}

func (x *SimConfigListener) GetDbUser() string {
	if x != nil && x.DbUser != nil {
		return *x.DbUser
	}
	return ""
}

func (x *SimConfigListener) GetDbPassword() string {
	if x != nil && x.DbPassword != nil {
		return *x.DbPassword
	}
	return ""
}

func (x *SimConfigListener) GetDbDatabase() string {
	if x != nil && x.DbDatabase != nil {
		return *x.DbDatabase
	}
	return ""
}

func (x *SimConfigListener) GetTargetDir() string {
	if x != nil && x.TargetDir != nil {
		return *x.TargetDir
	}
	return ""
}

func (x *SimConfigListener) GetWatchEnabled() bool {
	if x != nil && x.WatchEnabled != nil {
		return *x.WatchEnabled
	}
	return false
}

func (x *SimConfigListener) GetWatchPatterns() []string {
	if x != nil {
		return x.WatchPatterns
	}
	return nil
}

func (x *SimConfigListener) GetIgnorePatterns() []string {
	if x != nil {
		return x.IgnorePatterns
	}
	return nil
}

func (x *SimConfigListener) GetSeedDataPath() string {
	if x != nil && x.SeedDataPath != nil {
		return *x.SeedDataPath
	}
	return ""
}

func (x *SimConfigListener) GetSeedDataPaths() []string {
	if x != nil {
		return x.SeedDataPaths
	}
	return nil
}

func (x *SimConfigListener) GetVolumes() []string {
	if x != nil {
		return x.Volumes
	}
	return nil
}

// Configuration for a simulator dataset
type SimConfigDataset struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Compute       *SimConfigCompute             `protobuf:"bytes,1,opt,name=compute,proto3" json:"compute,omitempty"`
	Metadata      *SimConfigMetadata            `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Services      map[string]*SimConfigService  `protobuf:"bytes,3,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Listeners     map[string]*SimConfigListener `protobuf:"bytes,4,rep,name=listeners,proto3" json:"listeners,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimConfigDataset) Reset() {
	*x = SimConfigDataset{}
	mi := &file_proto_plato_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimConfigDataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimConfigDataset) ProtoMessage() {}

func (x *SimConfigDataset) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimConfigDataset.ProtoReflect.Descriptor instead.
func (*SimConfigDataset) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{5}
}

func (x *SimConfigDataset) GetCompute() *SimConfigCompute {
	if x != nil {
		return x.Compute
	}
	return nil
}

func (x *SimConfigDataset) GetMetadata() *SimConfigMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SimConfigDataset) GetServices() map[string]*SimConfigService {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *SimConfigDataset) GetListeners() map[string]*SimConfigListener {
	if x != nil {
		return x.Listeners
	}
	return nil
}

// Complete plato-config.yml structure
type PlatoConfig struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Service       *string                      `protobuf:"bytes,1,opt,name=service,proto3,oneof" json:"service,omitempty"`
	Datasets      map[string]*SimConfigDataset `protobuf:"bytes,2,rep,name=datasets,proto3" json:"datasets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatoConfig) Reset() {
	*x = PlatoConfig{}
	mi := &file_proto_plato_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatoConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatoConfig) ProtoMessage() {}

func (x *PlatoConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatoConfig.ProtoReflect.Descriptor instead.
func (*PlatoConfig) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{6}
}

func (x *PlatoConfig) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *PlatoConfig) GetDatasets() map[string]*SimConfigDataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

// Sandbox (VM) information
type Sandbox struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	PublicId      string                 `protobuf:"bytes,2,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty"`
	JobGroupId    string                 `protobuf:"bytes,3,opt,name=job_group_id,json=jobGroupId,proto3" json:"job_group_id,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CorrelationId string                 `protobuf:"bytes,6,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sandbox) Reset() {
	*x = Sandbox{}
	mi := &file_proto_plato_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sandbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sandbox) ProtoMessage() {}

func (x *Sandbox) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sandbox.ProtoReflect.Descriptor instead.
func (*Sandbox) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{7}
}

func (x *Sandbox) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *Sandbox) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

func (x *Sandbox) GetJobGroupId() string {
	if x != nil {
		return x.JobGroupId
	}
	return ""
}

func (x *Sandbox) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Sandbox) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Sandbox) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

// Request to create a VM snapshot
type CreateSnapshotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       *string                `protobuf:"bytes,1,opt,name=service,proto3,oneof" json:"service,omitempty"`
	GitHash       *string                `protobuf:"bytes,2,opt,name=git_hash,json=gitHash,proto3,oneof" json:"git_hash,omitempty"`
	Dataset       *string                `protobuf:"bytes,3,opt,name=dataset,proto3,oneof" json:"dataset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSnapshotRequest) Reset() {
	*x = CreateSnapshotRequest{}
	mi := &file_proto_plato_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotRequest) ProtoMessage() {}

func (x *CreateSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotRequest.ProtoReflect.Descriptor instead.
func (*CreateSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSnapshotRequest) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *CreateSnapshotRequest) GetGitHash() string {
	if x != nil && x.GitHash != nil {
		return *x.GitHash
	}
	return ""
}

func (x *CreateSnapshotRequest) GetDataset() string {
	if x != nil && x.Dataset != nil {
		return *x.Dataset
	}
	return ""
}

// Response from creating a VM snapshot
type CreateSnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArtifactId    string                 `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp     string                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CorrelationId string                 `protobuf:"bytes,4,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	S3Uri         string                 `protobuf:"bytes,5,opt,name=s3_uri,json=s3Uri,proto3" json:"s3_uri,omitempty"`
	GitHash       *string                `protobuf:"bytes,6,opt,name=git_hash,json=gitHash,proto3,oneof" json:"git_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSnapshotResponse) Reset() {
	*x = CreateSnapshotResponse{}
	mi := &file_proto_plato_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotResponse) ProtoMessage() {}

func (x *CreateSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotResponse.ProtoReflect.Descriptor instead.
func (*CreateSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSnapshotResponse) GetArtifactId() string {
	if x != nil {
		return x.ArtifactId
	}
	return ""
}

func (x *CreateSnapshotResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateSnapshotResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *CreateSnapshotResponse) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *CreateSnapshotResponse) GetS3Uri() string {
	if x != nil {
		return x.S3Uri
	}
	return ""
}

func (x *CreateSnapshotResponse) GetGitHash() string {
	if x != nil && x.GitHash != nil {
		return *x.GitHash
	}
	return ""
}

// Request to start the Plato worker
type StartWorkerRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Service            *string                `protobuf:"bytes,1,opt,name=service,proto3,oneof" json:"service,omitempty"`
	Dataset            string                 `protobuf:"bytes,2,opt,name=dataset,proto3" json:"dataset,omitempty"`
	PlatoDatasetConfig *SimConfigDataset      `protobuf:"bytes,3,opt,name=plato_dataset_config,json=platoDatasetConfig,proto3" json:"plato_dataset_config,omitempty"`
	Timeout            *int32                 `protobuf:"varint,4,opt,name=timeout,proto3,oneof" json:"timeout,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StartWorkerRequest) Reset() {
	*x = StartWorkerRequest{}
	mi := &file_proto_plato_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkerRequest) ProtoMessage() {}

func (x *StartWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkerRequest.ProtoReflect.Descriptor instead.
func (*StartWorkerRequest) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{10}
}

func (x *StartWorkerRequest) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *StartWorkerRequest) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

func (x *StartWorkerRequest) GetPlatoDatasetConfig() *SimConfigDataset {
	if x != nil {
		return x.PlatoDatasetConfig
	}
	return nil
}

func (x *StartWorkerRequest) GetTimeout() int32 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

// Response from starting the Plato worker
type StartWorkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp     string                 `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CorrelationId string                 `protobuf:"bytes,3,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartWorkerResponse) Reset() {
	*x = StartWorkerResponse{}
	mi := &file_proto_plato_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkerResponse) ProtoMessage() {}

func (x *StartWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plato_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkerResponse.ProtoReflect.Descriptor instead.
func (*StartWorkerResponse) Descriptor() ([]byte, []int) {
	return file_proto_plato_proto_rawDescGZIP(), []int{11}
}

func (x *StartWorkerResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StartWorkerResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *StartWorkerResponse) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

var File_proto_plato_proto protoreflect.FileDescriptor

const file_proto_plato_proto_rawDesc = "" +
	"\n" +
	"\x11proto/plato.proto\x12\x05plato\"\x9f\x01\n" +
	"\x10SimConfigCompute\x12\x12\n" +
	"\x04cpus\x18\x01 \x01(\x05R\x04cpus\x12\x16\n" +
	"\x06memory\x18\x02 \x01(\x05R\x06memory\x12\x12\n" +
	"\x04disk\x18\x03 \x01(\x05R\x04disk\x12\x19\n" +
	"\bapp_port\x18\x04 \x01(\x05R\aappPort\x120\n" +
	"\x14plato_messaging_port\x18\x05 \x01(\x05R\x12platoMessagingPort\"\xa4\x02\n" +
	"\x11SimConfigMetadata\x12\x18\n" +
	"\afavicon\x18\x01 \x01(\tR\afavicon\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12&\n" +
	"\x0fsource_code_url\x18\x04 \x01(\tR\rsourceCodeUrl\x12\x1b\n" +
	"\tstart_url\x18\x05 \x01(\tR\bstartUrl\x12\x18\n" +
	"\alicense\x18\x06 \x01(\tR\alicense\x12-\n" +
	"\tvariables\x18\a \x03(\v2\x0f.plato.VariableR\tvariables\x12\"\n" +
	"\n" +
	"flows_path\x18\b \x01(\tH\x00R\tflowsPath\x88\x01\x01B\r\n" +
	"\v_flows_path\"4\n" +
	"\bVariable\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xd8\x01\n" +
	"\x10SimConfigService\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x17\n" +
	"\x04file\x18\x02 \x01(\tH\x00R\x04file\x88\x01\x01\x12>\n" +
	"\x1brequired_healthy_containers\x18\x03 \x03(\tR\x19requiredHealthyContainers\x125\n" +
	"\x14healthy_wait_timeout\x18\x04 \x01(\x05H\x01R\x12healthyWaitTimeout\x88\x01\x01B\a\n" +
	"\x05_fileB\x17\n" +
	"\x15_healthy_wait_timeout\"\xfa\x04\n" +
	"\x11SimConfigListener\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x1c\n" +
	"\adb_type\x18\x02 \x01(\tH\x00R\x06dbType\x88\x01\x01\x12\x1c\n" +
	"\adb_host\x18\x03 \x01(\tH\x01R\x06dbHost\x88\x01\x01\x12\x1c\n" +
	"\adb_port\x18\x04 \x01(\x05H\x02R\x06dbPort\x88\x01\x01\x12\x1c\n" +
	"\adb_user\x18\x05 \x01(\tH\x03R\x06dbUser\x88\x01\x01\x12$\n" +
	"\vdb_password\x18\x06 \x01(\tH\x04R\n" +
	"dbPassword\x88\x01\x01\x12$\n" +
	"\vdb_database\x18\a \x01(\tH\x05R\n" +
	"dbDatabase\x88\x01\x01\x12\"\n" +
	"\n" +
	"target_dir\x18\n" +
	" \x01(\tH\x06R\ttargetDir\x88\x01\x01\x12(\n" +
	"\rwatch_enabled\x18\v \x01(\bH\aR\fwatchEnabled\x88\x01\x01\x12%\n" +
	"\x0ewatch_patterns\x18\f \x03(\tR\rwatchPatterns\x12'\n" +
	"\x0fignore_patterns\x18\r \x03(\tR\x0eignorePatterns\x12)\n" +
	"\x0eseed_data_path\x18\x0e \x01(\tH\bR\fseedDataPath\x88\x01\x01\x12&\n" +
	"\x0fseed_data_paths\x18\x14 \x03(\tR\rseedDataPaths\x12\x18\n" +
	"\avolumes\x18\x15 \x03(\tR\avolumesB\n" +
	"\n" +
	"\b_db_typeB\n" +
	"\n" +
	"\b_db_hostB\n" +
	"\n" +
	"\b_db_portB\n" +
	"\n" +
	"\b_db_userB\x0e\n" +
	"\f_db_passwordB\x0e\n" +
	"\f_db_databaseB\r\n" +
	"\v_target_dirB\x10\n" +
	"\x0e_watch_enabledB\x11\n" +
	"\x0f_seed_data_path\"\xb2\x03\n" +
	"\x10SimConfigDataset\x121\n" +
	"\acompute\x18\x01 \x01(\v2\x17.plato.SimConfigComputeR\acompute\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.plato.SimConfigMetadataR\bmetadata\x12A\n" +
	"\bservices\x18\x03 \x03(\v2%.plato.SimConfigDataset.ServicesEntryR\bservices\x12D\n" +
	"\tlisteners\x18\x04 \x03(\v2&.plato.SimConfigDataset.ListenersEntryR\tlisteners\x1aT\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.plato.SimConfigServiceR\x05value:\x028\x01\x1aV\n" +
	"\x0eListenersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.plato.SimConfigListenerR\x05value:\x028\x01\"\xcc\x01\n" +
	"\vPlatoConfig\x12\x1d\n" +
	"\aservice\x18\x01 \x01(\tH\x00R\aservice\x88\x01\x01\x12<\n" +
	"\bdatasets\x18\x02 \x03(\v2 .plato.PlatoConfig.DatasetsEntryR\bdatasets\x1aT\n" +
	"\rDatasetsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.plato.SimConfigDatasetR\x05value:\x028\x01B\n" +
	"\n" +
	"\b_service\"\xb0\x01\n" +
	"\aSandbox\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1b\n" +
	"\tpublic_id\x18\x02 \x01(\tR\bpublicId\x12 \n" +
	"\fjob_group_id\x18\x03 \x01(\tR\n" +
	"jobGroupId\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12%\n" +
	"\x0ecorrelation_id\x18\x06 \x01(\tR\rcorrelationId\"\x9a\x01\n" +
	"\x15CreateSnapshotRequest\x12\x1d\n" +
	"\aservice\x18\x01 \x01(\tH\x00R\aservice\x88\x01\x01\x12\x1e\n" +
	"\bgit_hash\x18\x02 \x01(\tH\x01R\agitHash\x88\x01\x01\x12\x1d\n" +
	"\adataset\x18\x03 \x01(\tH\x02R\adataset\x88\x01\x01B\n" +
	"\n" +
	"\b_serviceB\v\n" +
	"\t_git_hashB\n" +
	"\n" +
	"\b_dataset\"\xda\x01\n" +
	"\x16CreateSnapshotResponse\x12\x1f\n" +
	"\vartifact_id\x18\x01 \x01(\tR\n" +
	"artifactId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\x12%\n" +
	"\x0ecorrelation_id\x18\x04 \x01(\tR\rcorrelationId\x12\x15\n" +
	"\x06s3_uri\x18\x05 \x01(\tR\x05s3Uri\x12\x1e\n" +
	"\bgit_hash\x18\x06 \x01(\tH\x00R\agitHash\x88\x01\x01B\v\n" +
	"\t_git_hash\"\xcf\x01\n" +
	"\x12StartWorkerRequest\x12\x1d\n" +
	"\aservice\x18\x01 \x01(\tH\x00R\aservice\x88\x01\x01\x12\x18\n" +
	"\adataset\x18\x02 \x01(\tR\adataset\x12I\n" +
	"\x14plato_dataset_config\x18\x03 \x01(\v2\x17.plato.SimConfigDatasetR\x12platoDatasetConfig\x12\x1d\n" +
	"\atimeout\x18\x04 \x01(\x05H\x01R\atimeout\x88\x01\x01B\n" +
	"\n" +
	"\b_serviceB\n" +
	"\n" +
	"\b_timeout\"r\n" +
	"\x13StartWorkerResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\tR\ttimestamp\x12%\n" +
	"\x0ecorrelation_id\x18\x03 \x01(\tR\rcorrelationIdB\x12Z\x10plato-sdk/modelsb\x06proto3"

var (
	file_proto_plato_proto_rawDescOnce sync.Once
	file_proto_plato_proto_rawDescData []byte
)

func file_proto_plato_proto_rawDescGZIP() []byte {
	file_proto_plato_proto_rawDescOnce.Do(func() {
		file_proto_plato_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_plato_proto_rawDesc), len(file_proto_plato_proto_rawDesc)))
	})
	return file_proto_plato_proto_rawDescData
}

var file_proto_plato_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_plato_proto_goTypes = []any{
	(*SimConfigCompute)(nil),       // 0: plato.SimConfigCompute
	(*SimConfigMetadata)(nil),      // 1: plato.SimConfigMetadata
	(*Variable)(nil),               // 2: plato.Variable
	(*SimConfigService)(nil),       // 3: plato.SimConfigService
	(*SimConfigListener)(nil),      // 4: plato.SimConfigListener
	(*SimConfigDataset)(nil),       // 5: plato.SimConfigDataset
	(*PlatoConfig)(nil),            // 6: plato.PlatoConfig
	(*Sandbox)(nil),                // 7: plato.Sandbox
	(*CreateSnapshotRequest)(nil),  // 8: plato.CreateSnapshotRequest
	(*CreateSnapshotResponse)(nil), // 9: plato.CreateSnapshotResponse
	(*StartWorkerRequest)(nil),     // 10: plato.StartWorkerRequest
	(*StartWorkerResponse)(nil),    // 11: plato.StartWorkerResponse
	nil,                            // 12: plato.SimConfigDataset.ServicesEntry
	nil,                            // 13: plato.SimConfigDataset.ListenersEntry
	nil,                            // 14: plato.PlatoConfig.DatasetsEntry
}
var file_proto_plato_proto_depIdxs = []int32{
	2,  // 0: plato.SimConfigMetadata.variables:type_name -> plato.Variable
	0,  // 1: plato.SimConfigDataset.compute:type_name -> plato.SimConfigCompute
	1,  // 2: plato.SimConfigDataset.metadata:type_name -> plato.SimConfigMetadata
	12, // 3: plato.SimConfigDataset.services:type_name -> plato.SimConfigDataset.ServicesEntry
	13, // 4: plato.SimConfigDataset.listeners:type_name -> plato.SimConfigDataset.ListenersEntry
	14, // 5: plato.PlatoConfig.datasets:type_name -> plato.PlatoConfig.DatasetsEntry
	5,  // 6: plato.StartWorkerRequest.plato_dataset_config:type_name -> plato.SimConfigDataset
	3,  // 7: plato.SimConfigDataset.ServicesEntry.value:type_name -> plato.SimConfigService
	4,  // 8: plato.SimConfigDataset.ListenersEntry.value:type_name -> plato.SimConfigListener
	5,  // 9: plato.PlatoConfig.DatasetsEntry.value:type_name -> plato.SimConfigDataset
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_plato_proto_init() }
func file_proto_plato_proto_init() {
	if File_proto_plato_proto != nil {
		return
	}
	file_proto_plato_proto_msgTypes[1].OneofWrappers = []any{}
	file_proto_plato_proto_msgTypes[3].OneofWrappers = []any{}
	file_proto_plato_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_plato_proto_msgTypes[6].OneofWrappers = []any{}
	file_proto_plato_proto_msgTypes[8].OneofWrappers = []any{}
	file_proto_plato_proto_msgTypes[9].OneofWrappers = []any{}
	file_proto_plato_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_plato_proto_rawDesc), len(file_proto_plato_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_plato_proto_goTypes,
		DependencyIndexes: file_proto_plato_proto_depIdxs,
		MessageInfos:      file_proto_plato_proto_msgTypes,
	}.Build()
	File_proto_plato_proto = out.File
	file_proto_plato_proto_goTypes = nil
	file_proto_plato_proto_depIdxs = nil
}
