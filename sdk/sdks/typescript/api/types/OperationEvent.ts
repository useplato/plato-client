// This file was auto-generated by Fern from our API Definition.

/**
 * Server-sent event for operation monitoring. The SSE data field contains base64-encoded JSON of this object.
 *
 * **Event Types:**
 * - `connected`: Initial connection event, no action needed, continue listening
 * - `progress`: Progress update with human-readable message
 * - `run_result`: Sandbox setup/creation completed (check `success` field)
 * - `ssh_result`: SSH setup operation completed (check `success` field)
 * - `error`: Operation failed (check `error` or `message` field)
 *
 * **Terminal Events:**
 * `run_result`, `ssh_result`, and `error` are terminal events that indicate the operation has finished.
 * Close the stream after receiving one of these.
 *
 * **Success Detection:**
 * An operation is successful if you receive `run_result` or `ssh_result` with `success: true`.
 * An operation failed if you receive an `error` event or a result event with `success: false`.
 */
export interface OperationEvent {
    /** Type of operation event */
    type: OperationEvent.Type;
    /** Whether the operation was successful (only present in result events) */
    success?: boolean;
    /** Error message if operation failed */
    error?: string;
    /** Human-readable progress or status message */
    message?: string;
}

export namespace OperationEvent {
    /** Type of operation event */
    export const Type = {
        Connected: "connected",
        RunResult: "run_result",
        SshResult: "ssh_result",
        Error: "error",
        Progress: "progress",
    } as const;
    export type Type = (typeof Type)[keyof typeof Type];
}
